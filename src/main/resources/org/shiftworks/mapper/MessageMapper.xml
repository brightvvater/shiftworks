<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.shiftworks.mapper.MessageMapper">

	<!-- 연관 관계 MessageVO - ReceiverVO - MessengerFileVO -->
	<resultMap type="org.shiftworks.domain.MessageVO" id="messageMap">
	
		<result column="msg_id" property="msg_id" />
		<result column="notice" property="notice" />
		<result column="important" property="important" />
		<result column="content" property="content" />
		<result column="sendtime" property="sendtime" />
		<result column="sender" property="sender" />
		<collection property="receivers" resultMap="receiverMap"/>
		<!-- 1 : 다 관계의 경우 데이터 매핑시켜준다. 
			association => 1 : 1 관계 
			collection => 1 : 다 관계 (한명의 유저가 작성한 글 목록) 일반 컬럼과 pk 구분 가능 pk 칼럼에게는 result 아닌 id 사용 -->
	</resultMap>
	
	<resultMap type="org.shiftworks.domain.ReceiverVO" id="receiverMap">
		<result column="msg_id" property="msg_id"/>
		<result column="emp_id" property="emp_id"/>
		<result column="dept_id" property="dept_id"/>
		
		<result column="checking" property="checking"/>
	</resultMap>
	
	
	<!-- Message 관련 기능 -->
	<!-- 메시지 저장 -->
	<insert id="insertMessage"
		parameterType="org.shiftworks.domain.MessageVO">
		INSERT INTO Message(msg_id, notice, important, content,
		sendtime, emp_id)
		VALUES(message_seq.nextval, #{notice}, #{important}, #{content}, #{sendtime}, #{emp_id})
	</insert>

	<!-- 모든 메시지 검색 -->
	<select id="getList"
		resultType="org.shiftworks.domain.MessageVO">
		SELECT * FROM message
	</select>

	<!-- 메시지 번호를 통해 상세 메시지 검색 -->
	<select id="getMessage"
		resultType="org.shiftworks.domain.MessageVO" parameterType="int">
		SELECT *
		FROM message WHERE msg_id = #{msg_id}
	</select>

	<!-- 공지로 보낸 메시지 검색 -->
	<select id="getNoticeSendMessage"
		resultType="org.shiftworks.domain.MessageVO" parameterType="String">
		SELECT *
		FROM message m, receiver r WHERE notice = 'Y' AND m.emp_id = #{emp_id}
	</select>

	<!-- 중요로 보낸 메시지 검색 -->
	<select id="getImportantReceiverMessage"
		resultType="org.shiftworks.domain.MessageVO" parameterType="String">
		SELECT *
		FROM message m, receiver r WHERE m.important = 'Y' and r.emp_id =
		#{emp_id}
	</select>

	<!-- 공지로 받은 메시지 검색 -->
	<select id="getNoticeReceiverMessage"
		resultType="org.shiftworks.domain.MessageVO" parameterType="String">
		SELECT *
		FROM message m, receiver r
		WHERE m.msg_id = r.msg_id
		AND notice = 'Y'
		AND r.emp_id = #{emp_id}
	</select>

	<!-- 중요로 받은 메시지 검색 -->
	<select id="getImportantSendMessage"
		resultType="org.shiftworks.domain.MessageVO" parameterType="String">
		SELECT *
		FROM message m, receiver r
		WHERE m.msg_id = r.msg_id
		AND important = 'Y'
		AND r.emp_id = #{emp_id}
	</select>

	<!-- 받은 메시지 검색 -->
	<select id="getReceiveMessage"
		resultMap="messageMap" parameterType="String">
		SELECT
		m.msg_id , m.notice, m.important, m.sendtime, m.emp_id, r.emp_id, r.checking
		FROM message m, receiver r
		WHERE m.msg_id = r.msg_id and r.emp_id = #{emp_id}
	</select>

	<!-- 보낸 메시지 검색 -->
	<select id="getSendMessage"
		resultMap="messageMap" parameterType="String">
		SELECT
		m.msg_id, m.notice, m.important, m.sendtime, m.sender, r.emp_id as emp_id, r.checking as checking
		FROM message m, receiver r
		WHERE m.msg_id = r.msg_id and m.sender = #{emp_id}
	</select>
</mapper>
