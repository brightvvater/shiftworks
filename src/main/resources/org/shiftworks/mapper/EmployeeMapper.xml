<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.shiftworks.mapper.EmployeeMapper">

<!-- <sql id="criteria">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item='type' collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()">
							title like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'C'.toString()">
							content like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'W'.toString()">
							writer like '%'||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql> -->


	<resultMap type="org.shiftworks.domain.EmployeeVO" id="empMap">
		<id property="emp_id" column="emp_id"/>
		<result property="emp_id" column="emp_id"/>
		<result property="dept_id" column="dept_id"/>
		<result property="name" column="name"/>
		<result property="password" column="password"/>
		<collection property="authList" resultMap="deptMap"/>
	</resultMap>
	
	<resultMap type="org.shiftworks.domain.DepartmentVO" id="deptMap">
		<result property="dept_id" column="dept_id"/>
		<result property="authority" column="authority"/>
	</resultMap>


	<select id="read" resultMap="empMap">
		SELECT emp_id, e.dept_id as dept_id, password, name, authority
			FROM employee e JOIN department d
			ON e.dept_id = d.dept_id
			WHERE emp_id = #{emp_id}
	</select>
	
<<<<<<< HEAD
	
	<!--계정관리-->
	
		<!--전체 list-->
	<select id="getList" resultType="org.shiftworks.domain.EmployeeVO">
		select emp_id, dept_id, name, position ,mobile, internal from employee
	</select>
	
		<!-- 페이징처리 -->
	<!-- 	<select id="getListWithPaging"
		resultType="org.shiftworks.domain.EmployeeVO"> 
		<![CDATA[ 
		select emp_id, dept_name, name, position
			from ( 
				select /*+INDEX_DESC(employee pk_board) */ 
						rownum rn, bno, title, content, writer, regdate, updatedate, replyCnt
					from tbl_board 
					where 
		]]>
		
	<include refid="criteria"/>

	<![CDATA[
			 rownum <= #{pageNum} * #{amount}
		) where rn > (#{pageNum} -1) * #{amount}
	
	]]>
	

	</select> -->
		
		
		<!-- 계정추가 -->
	<insert id="insert">
		insert into employee(emp_id, dept_id, position, birthday, name, mobile, internal, 
		email, address, entry_date, password) 
			values (#{emp_id}, #{dept_id}, #{position}, #{birthday}, #{name}, #{mobile}, #{internal}, 
			#{email}, #{address}, #{entry_date} ,#{password})
	</insert>
		<!-- 계정상세보기 -->
	<select id="detail" resultType="org.shiftworks.domain.EmployeeVO">
		select emp_id, dept_id, position, birthday, name, mobile, internal, 
		email, address, entry_date, resignation_date  from employee where emp_id = #{emp_id}
	</select>
		<!-- 계정삭제 -->
	<delete id="delete">
		delete from employee where emp_id = #{emp_id}
	</delete>
		<!-- 계정정보수정 -->
	<update id="update">
		update employee set dept_id=#{dept_id}, position=#{position}, mobile=#{mobile}, internal=#{internal}
		, address=#{address}, resignation_date=#{resignation_date} where emp_id=#{emp_id}
	</update>
	
	 <!--사원 검색 //미완성-->
	<!--  <select id="getEmployeeForSearching" resultType="org.shiftworks.domain.EmployeeVO">
		<![CDATA[
			select emp_id, dept_id, position, birthday, name, mobile, internal, 
					email, address, entry_date, resignation_date 
			from
				
		]]>

	</select>  -->
	
	<!-- 총 계정 개수 -->
	<!-- <select id="getTotalCount" resultType="int">
		select count(*) from tbl_board where 
		<include refid="criteria"/>
		bno > 0
	</select> -->
=======
	<!--계정관리-->
	<!--전체 list-->
	<select id="getList" resultType="org.shiftworks.domain.EmployeeVO">
		select emp_id, dept_id, name, position ,mobile, internal from employee
	</select>
	
	<!-- 계정추가 -->
	<insert id="insert">
		insert into employee(emp_id, dept_id, position, birthday, name, mobile, internal, 
		email, address, entry_date, password) 
			values (#{emp_id}, #{dept_id}, #{position}, #{birthday}, #{name}, #{mobile}, #{internal}, 
			#{email}, #{address}, #{entry_date} ,#{password})
	</insert>
		<!-- 계정상세보기 -->
	<select id="detail" resultType="org.shiftworks.domain.EmployeeVO">
		select emp_id, dept_id, position, birthday, name, mobile, internal, 
		email, address, entry_date, resignation_date  from employee where emp_id = #{emp_id}
	</select>
		<!-- 계정삭제 -->
	<delete id="delete">
		delete from employee where emp_id = #{emp_id}
	</delete>
		<!-- 계정정보수정 -->
	<update id="update">
		update employee set dept_id=#{dept_id}, position=#{position}, mobile=#{mobile}, internal=#{internal}
		, address=#{address}, resignation_date=#{resignation_date} where emp_id=#{emp_id}
	</update>
>>>>>>> refs/heads/develop
	
	
</mapper>
